name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Cordova Build
    runs-on: macos-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js (needed for Cordova)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Cordova globally
      - name: Install Cordova
        run: npm install -g cordova

      # Install dependencies (if you have a package.json file)
      - name: Install dependencies
        run: npm install
        working-directory: ./  # Aseg√∫rate de estar en la ra√≠z del proyecto

      # Remove iOS platform if it already exists (to avoid the "Platform already added" error)
      - name: Remove iOS platform (if exists)
        run: cordova platform rm ios || true
        working-directory: ./  # Aseg√∫rate de estar en la ra√≠z del proyecto

      # Add iOS platform
      - name: Add iOS platform
        run: cordova platform add ios
        working-directory: ./  # Aseg√∫rate de estar en la ra√≠z del proyecto

      # ** Check if Podfile exists, and create it if it doesn't **
      - name: Force Podfile creation if missing
        run: |
          if [ ! -f platforms/ios/Podfile ]; then
            echo "No Podfile found, creating one..."
            cd platforms/ios && pod init
          else
            echo "Podfile found, continuing..."
          fi

      # ** Update iOS deployment target to 12.0 or higher **
      - name: Update deployment target to 12.0
        run: sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 11.0/IPHONEOS_DEPLOYMENT_TARGET = 12.0/g' platforms/ios/HelloCordova.xcodeproj/project.pbxproj

      # ** Update Xcode project with Development Team ID (signing) **
      - name: Set Development Team ID for signing
        run: |
          sed -i '' "s/DEVELOPMENT_TEAM = \".*\";/DEVELOPMENT_TEAM = \"${{ secrets.DEV_TEAM_ID }}\";/g" platforms/ios/HelloCordova.xcodeproj/project.pbxproj
        env:
          DEV_TEAM_ID: ${{ secrets.DEV_TEAM_ID }}

      # Create build.json dynamically
      - name: Create build.json
        run: |
          echo '{
            "ios": {
              "release": {
                "codeSignIdentity": "iPhone Distribution",
                "developmentTeam": "${{ secrets.DEV_TEAM_ID }}",
                "packageType": "app-store",
                "provisioningProfile": "${{ secrets.PROVISIONING_PROFILE }}"
              }
            }
          }' > build.json

      # Install CocoaPods dependencies for iOS
      - name: Install CocoaPods
        run: pod install
        working-directory: platforms/ios

      # Build the Cordova iOS app with the build.json config for signing
      - name: Build iOS app
        run: cordova build ios --release --device --buildConfig=build.json
        working-directory: ./  # Aseg√∫rate de estar en la ra√≠z del proyecto

      # Prepare Payload directory
      - name: Prepare Payload directory
        run: mkdir Payload
        working-directory: platforms/ios/build/device

      # Move the app into the Payload directory
      - name: Move app to Payload
        run: mv HelloCordova.app/ Payload  # Cambia "HelloCordova" por el nombre de tu app
        working-directory: platforms/ios/build/device

      # Zip the output
      - name: Zip output
        run: zip -qq -r -9 CordovaIpaExport.ipa Payload
        working-directory: platforms/ios/build/device

      # Upload binaries to release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: platforms/ios/build/device/CordovaIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is the first release"

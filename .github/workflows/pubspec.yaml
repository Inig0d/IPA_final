name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-latest
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v3

      # Instala Flutter usando el canal estable y la arquitectura x64
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Crea o reemplaza el contenido del pubspec.yaml
      - name: Create or update pubspec.yaml
        run: |
          echo "name: ipa_final" > pubspec.yaml
          echo "description: A new Flutter project." >> pubspec.yaml
          echo "" >> pubspec.yaml
          echo "publish_to: 'none'" >> pubspec.yaml
          echo "" >> pubspec.yaml
          echo "environment:" >> pubspec.yaml
          echo "  sdk: '>=2.12.0 <3.0.0'" >> pubspec.yaml
          echo "" >> pubspec.yaml
          echo "dependencies:" >> pubspec.yaml
          echo "  flutter:" >> pubspec.yaml
          echo "    sdk: flutter" >> pubspec.yaml
          echo "" >> pubspec.yaml
          echo "dev_dependencies:" >> pubspec.yaml
          echo "  flutter_test:" >> pubspec.yaml
          echo "    sdk: flutter" >> pubspec.yaml
          echo "" >> pubspec.yaml
          echo "flutter:" >> pubspec.yaml
          echo "  uses-material-design: true" >> pubspec.yaml
          echo "  assets:" >> pubspec.yaml
          echo "    - assets/mi_carnet_vip_canjear.html" >> pubspec.yaml

      # Verifica si el archivo HTML est√° en el lugar correcto (en la ra√≠z)
      - name: Ensure HTML file exists
        run: |
          if [ ! -f mi_carnet_vip_canjear.html ]; then
            echo "Error: El archivo mi_carnet_vip_canjear.html no existe en la ra√≠z."
            exit 1
          else
            echo "El archivo mi_carnet_vip_canjear.html existe en la ra√≠z, movi√©ndolo a assets/html..."
            mkdir -p assets/html
            mv mi_carnet_vip_canjear.html assets/html/
          fi

      # Instala las dependencias del proyecto Flutter
      - run: flutter pub get

      # Actualiza el repositorio de pods
      - run: pod repo update
        working-directory: ios

      # Compila la versi√≥n release de la app iOS sin firmar
      - run: flutter build ios --release --no-codesign

      # Crea el directorio Payload
      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      # Mueve la app a la carpeta Payload
      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      # Comprime los archivos en un archivo IPA
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Sube el archivo IPA a la secci√≥n de releases
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is first release"
